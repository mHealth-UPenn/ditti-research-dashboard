# Copyright 2025 The Trustees of the University of Pennsylvania
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may]
# not use this file except in compliance with the License. You may obtain a
# copy of the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

"""Lambda Tasks

Revision ID: f87512aa36db
Revises: b9459a8bda83
Create Date: 2024-11-22 14:27:32.798548

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'f87512aa36db'
down_revision = 'b9459a8bda83'
branch_labels = None
depends_on = 'f267b6182686'


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lambda_task',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column(
                        'status',
                        sa.Enum(
                            'Pending', 'InProgress', 'Success', 'Failed',
                            'CompletedWithErrors', name='taskstatustypeenum'
                        ),
                        nullable=False
                    ),
                    sa.Column('billed_ms', sa.Integer(), nullable=True),
                    sa.Column('created_on', sa.DateTime(), nullable=False),
                    sa.Column('updated_on', sa.DateTime(), nullable=False),
                    sa.Column('completed_on', sa.DateTime(), nullable=True),
                    sa.Column('log_file', sa.String(), nullable=True),
                    sa.Column('error_code', sa.String(), nullable=True),
                    sa.PrimaryKeyConstraint('id'),
                    sa.Index('ix_lambda_task_created_on', 'created_on')
                    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_lambda_task_created_on', table_name='lambda_task')
    op.drop_table('lambda_task')

    # Drop ENUM type
    taskstatustypeenum = postgresql.ENUM(
        'Pending', 'InProgress', 'Success', 'Failed', 'CompletedWithErrors',
        name='taskstatustypeenum'
    )
    taskstatustypeenum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###