# Ditti Research Dashboard
# Copyright (C) 2025 the Trustees of the University of Pennsylvania
#
# Ditti Research Dashboard is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as published
# by the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# Ditti Research Dashboard is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

"""Lambda Tasks

Revision ID: f87512aa36db
Revises: b9459a8bda83
Create Date: 2024-11-22 14:27:32.798548

"""

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "f87512aa36db"
down_revision = "b9459a8bda83"
branch_labels = None
depends_on = "f267b6182686"


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "lambda_task",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "status",
            sa.Enum(
                "Pending",
                "InProgress",
                "Success",
                "Failed",
                "CompletedWithErrors",
                name="taskstatustypeenum",
            ),
            nullable=False,
        ),
        sa.Column("billed_ms", sa.Integer(), nullable=True),
        sa.Column("created_on", sa.DateTime(), nullable=False),
        sa.Column("updated_on", sa.DateTime(), nullable=False),
        sa.Column("completed_on", sa.DateTime(), nullable=True),
        sa.Column("log_file", sa.String(), nullable=True),
        sa.Column("error_code", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.Index("ix_lambda_task_created_on", "created_on"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_lambda_task_created_on", table_name="lambda_task")
    op.drop_table("lambda_task")

    # Drop ENUM type
    taskstatustypeenum = postgresql.ENUM(
        "Pending",
        "InProgress",
        "Success",
        "Failed",
        "CompletedWithErrors",
        name="taskstatustypeenum",
    )
    taskstatustypeenum.drop(op.get_bind(), checkfirst=True)
    # ### end Alembic commands ###
